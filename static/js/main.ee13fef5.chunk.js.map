{"version":3,"sources":["components/Movie.js","route/Home.js","route/About.js","components/Navigation.js","route/Detail.js","App.js","index.js"],"names":["Movie","id","title","year","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","medium_cover_image","React","Component","About","props","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"sWAyCeA,MApCf,YAAsD,EAAtCC,GAAuC,IAApCC,EAAmC,EAAnCA,MAAMC,EAA6B,EAA7BA,KAAKC,EAAwB,EAAxBA,QAAQC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAE1C,OACA,qBAAKC,UAAU,QAAf,SACA,eAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,gBACRC,MAAM,CAACP,OAAKD,QAAME,UAAQC,SAAOC,WAFtC,UAIA,qBAAKK,IAAKN,EAAQO,IAAKV,EAAOA,MAAOA,IACrC,sBAAKK,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BL,IAC9B,oBAAIK,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,gBAAd,SACMD,EAAOO,KACH,SAACC,EAAOC,GACP,OAAO,mCAAkBD,IAATC,QAK3B,oBAAGR,UAAU,iBAAb,UAA+BH,EAAQY,MAAM,EAAE,KAA/C,kBC8COC,G,kNA9DbP,MAAM,CACJQ,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAW,8BAAAC,EAAA,sEAQEC,IAAMC,IAAI,4DARZ,gBAKHJ,EALG,EAGPK,KACEA,KACEL,OAMN,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAClCQ,QAAQC,IAAIR,GAZH,2C,uDAiBX,WAEES,KAAKR,c,oBAGP,WACE,MAA4BQ,KAAKlB,MAA1BQ,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OAAQ,yBAASZ,UAAU,YAAnB,SACLW,EAEC,qBAAKX,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,6BAKJ,qBAAKA,UAAU,SAAf,SACGY,EAAON,KACN,SAACgB,GACD,OAAQ,cAAC,EAAD,CAEN5B,GAAK4B,EAAM5B,GACXE,KAAM0B,EAAM1B,KACZD,MAAO2B,EAAM3B,MACbE,QAAUyB,EAAMzB,QAChBC,OAAQwB,EAAMC,mBACdxB,OAAQuB,EAAMvB,QANRuB,EAAM5B,e,GA9CL8B,IAAMC,Y,qBCWVC,MAff,SAAeC,GAIX,OAFAR,QAAQC,IAAIO,GAGR,sBAAK3B,UAAU,mBAAf,UACA,qIAIA,8D,MCAO4B,MATf,WACI,OACI,sBAAK5B,UAAU,MAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,wBCiBG4B,E,uKApBX,WAEI,MAA6BR,KAAKM,MAA1BG,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACGC,GAAlBF,EAAS3B,OACR4B,EAAQE,KAAK,O,oBAKrB,WACI,IAAOH,EAAYT,KAAKM,MAAjBG,SACP,OAAGA,EAAS3B,MACD,+BAAO2B,EAAS3B,MAAMR,QAEtB,S,GAhBE6B,IAAMC,WCiBZS,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3B,IACxC,cAAC,IAAD,CAAOyB,KAAK,SAASE,UAAWX,IAChC,cAAC,IAAD,CAAOS,KAAK,gBAAgBE,UAAWR,QCV7CS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ee13fef5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Movie({id,title,year,summary,poster, genres}){\r\n    //<LINK> pathname <Route> pathname일치해야함 \r\n    return (\r\n    <div className=\"movie\">\r\n    <Link to={{\r\n        pathname:'/movie-detail'\r\n        ,state:{year,title,summary,poster,genres},\r\n        }}>\r\n    <img src={poster} alt={title} title={title}/>\r\n    <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n            { genres.map( \r\n                  (genre, index) =>{\r\n                   return <li key={index}> {genre}</li>;\r\n                  }   \r\n                )// end map\r\n            }\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n    </div>\r\n    </Link>\r\n    </div>\r\n    \r\n    );\r\n}\r\nMovie.propTypes ={\r\n    id: PropTypes.number.isRequired\r\n    ,year: PropTypes.number.isRequired\r\n    ,title: PropTypes.string.isRequired\r\n    ,summary: PropTypes.string.isRequired\r\n    ,poster: PropTypes.string.isRequired\r\n    ,genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n \r\nexport default Movie;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css'\r\n\r\n \r\nclass Home extends React.Component{\r\n \r\n  //state data\r\n  state={\r\n    isLoading: true,\r\n    movies: [],\r\n  }; \r\n \r\n  //API JSON받기\r\n  getMovies= async() =>{\r\n    // 일부분 데이터만 받기\r\n    const {\r\n      data:{\r\n        data:{\r\n          movies\r\n        },\r\n      },\r\n    } =  await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n    //setSatet에 전달\r\n    //this.setState({movies: movies})\r\n    this.setState({movies, isLoading: false}) //축약버젼\r\n    console.log(movies)\r\n    //console.log(movies.data.data.movies)\r\n  }//end getmovies  \r\n  \r\n  //내장함수\r\n  componentDidMount(){\r\n    //함수 호출\r\n    this.getMovies();   \r\n  }//end com\r\n  \r\n  render(){\r\n    const {isLoading, movies} = this.state;\r\n    return (<section className=\"container\">\r\n      {isLoading ?  //삼항연산자\r\n      ( //삼항 참\r\n        <div className=\"loader\"> \r\n          <span className=\"loader__text\">Loading .... </span>          \r\n        </div>        \r\n      ) //삼항 참끝      \r\n      :\r\n      (  //삼항거짓    \r\n      <div className=\"movies\">\r\n        {movies.map( \r\n          (movie) =>{            \r\n          return (<Movie\r\n            key ={movie.id}\r\n            id ={movie.id}\r\n            year={movie.year}\r\n            title={movie.title}\r\n            summary ={movie.summary}\r\n            poster={movie.medium_cover_image}\r\n            genres={movie.genres}           \r\n          />); \r\n        }//end movie\r\n        ) //end movies.map\r\n        }\r\n      </div>\r\n      )//삼항거짓끝\r\n      }  \r\n    </section>); //end return\r\n  }//end ren\r\n}//end class\r\n \r\n// 항상 마지막라인\r\nexport default Home;\r\n \r\n","import React from 'react';\r\nimport './About.css'\r\nfunction About(props){\r\n\r\n    console.log(props);\r\n    \r\n    return (\r\n        <div className=\"about__container\">\r\n        <span> \r\n            \"Freedom is the freedom to say that two plus two make four. \r\n            IF that is granted, all else follows\"\r\n        </span>\r\n        <span> - George Orwell, 1984</span>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './Navigation.css';\r\nfunction Navigation(){\r\n    return(\r\n        <div className=\"nav\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\"> About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nclass Detail extends React.Component{\r\n    //디테일 컴포넌트가 마운트 되면\r\n    componentDidMount(){\r\n        //movies.js <LINK>태그에서 데이터 전송\r\n        const  {location, history} = this.props;\r\n        if(location.state == undefined){\r\n            history.push('/');\r\n        }//end if\r\n    }//end com\r\n    \r\n\r\n    render(){\r\n        const {location} = this.props;\r\n        if(location.state){\r\n            return <span>{location.state.title}</span>\r\n        }else{\r\n            return null;\r\n        }//end if\r\n        \r\n    }//end ren\r\n}//end class\r\n\r\nexport default Detail;","import React from 'react';\nimport Home from './route/Home'\nimport './App.css'\nimport {HashRouter, Route} from 'react-router-dom';\nimport About from './route/About'\nimport Navigation from './components/Navigation';\nimport Detail from './route/Detail';\n\nfunction App(){\n  return (\n    <HashRouter>   \n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n// 항상 마지막라인\nexport default App;\n \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App /> ,document.getElementById('root'));"],"sourceRoot":""}